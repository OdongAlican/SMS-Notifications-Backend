"""
Django settings for pride_notify_service project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os
from cryptography.fernet import Fernet
from dotenv import load_dotenv
load_dotenv()


# Load the encryption key from environment variables
encryption_key = os.getenv("ENCRYPTION_KEY")

if encryption_key is None:
    raise ValueError("Encryption key not found. Set ENCRYPTION_KEY in your environment variables.")

cipher = Fernet(encryption_key.encode())

# Function to decrypt values
def decrypt_data(encrypted_value):
    return cipher.decrypt(encrypted_value.encode()).decode()


BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-cfeh-ptv9kguv(kd-^%oj5$w$!5edd)2*$5b3m)(&-e@!wj((v'

DEBUG = True

ALLOWED_HOSTS = ["cep-test.pride.co.ug"]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken', 
    'pride_notify_notice',
    'django_celery_results',
    'django_celery_beat',
    'users',
    'trails'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'trails.middleware.CurrentUserMiddleware',
]

ROOT_URLCONF = 'pride_notify_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'pride_templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pride_notify_service.wsgi.application'



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': decrypt_data(os.environ["MYSQL_ENCRYPT_DATABASE_NAME"]),
        'USER': decrypt_data(os.environ["MYSQL_ENCRYPT_DATABASE_USER"]),
        'PASSWORD': decrypt_data(os.environ["MYSQL_ENCRYPT_DATABASE_PASSWORD"]),
        'HOST': decrypt_data(os.environ["MYSQL_ENCRYPT_DATABASE_HOST"]),
        'PORT': decrypt_data(os.environ["MYSQL_ENCRYPT_DATABASE_PORT"]),
    },
    'oracle': {
        # 'ENGINE': 'django.db.backends.oracle',
        # 'NAME': decrypt_data(os.environ["ORACLE_DATABASE_NAME"]),
        # 'USER': decrypt_data(os.environ["ORACLE_DATABASE_USER"]),
        # 'PASSWORD': decrypt_data(os.environ["ORACLE_DATABASE_PASSWORD"]),
        # 'HOST': decrypt_data(os.environ["ORACLE_DATABASE_HOST"]),
        # 'PORT': decrypt_data(os.environ["ORACLE_DATABASE_PORT"]),
        # 'OPTIONS': {'service_name': decrypt_data(os.environ["ORACLE_DATABASE_SERVICE_NAME"]),},
    },
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': 'your_secret_key',
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
}


LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



STATIC_URL = 'static/'


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.PrideUser'

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "https://yourfrontenddomain.com",
]


CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Kampala'

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


try:
    from pride_notify_service.env.local import *
except ImportError as e:
    pass